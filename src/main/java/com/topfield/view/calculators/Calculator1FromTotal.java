/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.topfield.view.calculators;

import com.topfield.controller.Equations;
import com.topfield.controller.ScaleConverters;
import com.topfield.dao.SILDao;
import com.topfield.daoImpl.SILDaoImpl;
import com.topfield.main.InternalFrameDemo;
import com.topfield.modal.Components;
import com.topfield.modal.Sil;
import java.awt.Color;
import java.awt.Component;
import javax.swing.Box;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Murali
 */
public class Calculator1FromTotal extends javax.swing.JPanel {

    private JList<Components> sensorList;
    private JList<Components> LSCList;
    private JList<Components> FECList;
    private JPanel sensorFrom; 
    private JPanel LSCFrom; 
    private JPanel FECFrom; 
    private Equations equations = new Equations();
    private ScaleConverters sacaleConverters = new ScaleConverters();
    private static java.text.DecimalFormat sf = new java.text.DecimalFormat("0.##E0"); 
    private int silId;
    private SILDao silDao = new SILDaoImpl();
    
    /**
     * Creates new form Calculator1FromTotal
     */
    
    public Calculator1FromTotal(JList<Components> sensorList,JPanel sensorFrom,JList<Components> LSCList,JPanel LSCFrom,JList<Components> FECList,JPanel FECFrom,int silId) {
        
        setBackground(new java.awt.Color(133, 146, 158));
        this.sensorList = sensorList;
        this.LSCList = LSCList;
        this.FECList =FECList;
        this.sensorFrom = sensorFrom;
        this.LSCFrom = LSCFrom;
        this.FECFrom = FECFrom;
        this.silId = silId;
        
        initComponents();
        //setAlignmentX(LEFT_ALIGNMENT);
        //setAlignmentY(BOTTOM_ALIGNMENT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        btnTotal = new javax.swing.JButton();

        setBackground(new java.awt.Color(133, 146, 158));

        jPanel5.setBackground(new java.awt.Color(133, 146, 158));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("<html>\n" +
            "<body>\n" +
            "\n"+
            "<p>"+  silDao.findById(silId).getSILSubComponent().getSpgDescription() +" || Overall PFD<sub>AVG</sub> (Low Demand) = </p>\n" +

            "\n" +
            "</body>\n" +
            "</html>");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("------------------");

        btnTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnTotal.setText("Total");
        btnTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addGap(7, 7, 7)
                .addComponent(btnTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(btnTotal)
                .addComponent(jLabel23)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTotalActionPerformed
        
      CalculateFinalTotal();
   
    }//GEN-LAST:event_btnTotalActionPerformed

    public void CalculateFinalTotal(){
    
         String click ="";
        
        Double Overall_PFD = 0.0;
        


        
        //String click ="Your Sensors selections are \n "+sensorlamda+","+sensorccf+","+sensordc+","+sensorvoting+","+sensormttr+","+sensorptp+"\n";
        
        
        Overall_PFD = Overall_PFD + PFD_AVG_MUT_Calculator(sensorList,(JPanel)sensorFrom.getComponent(0), "sensor components");
        
        //sensorindividualSum.setText("0."+sensorlamda+""+sensorccf+""+sensordc+""+sensorvoting+""+sensormttr+""+sensorptp);
        
        Overall_PFD = Overall_PFD + PFD_AVG_MUT_Calculator(LSCList,(JPanel)LSCFrom.getComponent(0), "logic system components");

         // click = click+"Your Sensors selections are \n "+LSClamda+","+LSCccf+","+LSCdc+","+LSCvoting+","+LSCmttr+","+LSCptp+"\n";
       
       
         Overall_PFD =Overall_PFD + PFD_AVG_MUT_Calculator(FECList,(JPanel)FECFrom.getComponent(0), "final element components");  
          
          
        
       /*for (int i = 0; i < sensorList.getModel().getSize(); i++) {
            Object item = sensorList.getModel().getElementAt(i);
            System.out.println("Item = " + item);
            click = click+"Item = " + item+"\n ";
        }*/
        
        
       
       //click = click+"Your Sensors selections are \n "+FEClamda+","+FECccf+","+FECdc+","+FECvoting+","+FECmttr+","+FECptp;
       
       
        jLabel24.setText(sf.format(Overall_PFD));
        setSilData();
        
        //JOptionPane.showMessageDialog(null,""+Overall_PFD);
    
    
    
    }
    
    
    
    public Double PFD_AVG_MUT_Calculator(JList<Components> components,JPanel PFDFrom,String componentName){
     Double pfdAvg= 0.0;
     
    for (int i = 0; i < components.getModel().getSize(); i++) {
      pfdAvg= pfdAvg+ PFD_AVG_Calculators((Components)components.getModel().getElementAt(i), PFDFrom, componentName);
    }
     
    JLabel individualSum = ((JLabel)PFDFrom.getComponents()[20]);
    
    individualSum.setText(sf.format(pfdAvg));
    
     return pfdAvg;
    }
    
    public Double PFD_AVG_Calculators(Components component,JPanel PFDFrom,String componentName){
       
        
        Double pfdAvg= 0.0;
       Component components[] = PFDFrom.getComponents();
        
        //String lamda = ((JTextField)components[7]).getText();
        String saftyFactor = ((JTextField)components[15]).getText();
        String ccf = ((JTextField)components[8]).getText();
        String dc = ((JTextField)components[16]).getText();
        int voting = ((JComboBox)components[10]).getSelectedIndex();
        String mttr = ((JTextField)components[12]).getText();
        String ptp = ((JTextField)components[11]).getText();
        String mttrCom = ((JComboBox)components[13]).getSelectedItem()+"";
        String ptpCom = ((JComboBox)components[14]).getSelectedItem()+"";
        JLabel individualSum = ((JLabel)components[20]);
        
        
        
        try {
             Double lamdaDou =  component.getLamda();
             Double ptpDou   = component.getPti(); 
             Double saftyFactorDou = component.getSafetyRelevantFactor()/100; 
             
             pfdAvg =equations.PFD_AVG(lamdaDou, saftyFactorDou ,sacaleConverters.ptpPeriodConversion(ptpCom,ptpDou),voting);
             
             /*JOptionPane.showMessageDialog(InternalFrameDemo.mainFrame,"lamda-"+lamdaDou+" saftyFactor-"+saftyFactor+" ccf-"+ccf+" dc-"+dc+" voting-"+voting+" mttr-"+
                      mttr+" ptp-"+ptp+" mttrCom-"+mttrCom+" ptpCom-"+ptpCom);*/
           //   System.out.println("************"+sensorlamdaDou.floatValue());
           //    System.out.println("88888888888"+ptpCom+" "+mttrCom);
           //  individualSum.setText(sf.format(pfdAvg));
           
          // JOptionPane.showMessageDialog(InternalFrameDemo.mainFrame,"pfdAvg "+pfdAvg);
             
        } catch (NumberFormatException e) {
             JOptionPane.showMessageDialog(InternalFrameDemo.mainFrame,"Please check you inputs in "+componentName);
        }

       return pfdAvg;
    }
    
    
    
    
    
    public Double PFD_AVG_Calculator(JPanel PFDFrom,String componentName){
       
        
        Double pfdAvg= 0.0;
       Component components[] = PFDFrom.getComponents();
        
        String lamda = ((JTextField)components[7]).getText();
        String saftyFactor = ((JTextField)components[15]).getText();
        String ccf = ((JTextField)components[8]).getText();
        String dc = ((JTextField)components[16]).getText();
        int voting = ((JComboBox)components[10]).getSelectedIndex();
        String mttr = ((JTextField)components[12]).getText();
        String ptp = ((JTextField)components[11]).getText();
        String mttrCom = ((JComboBox)components[13]).getSelectedItem()+"";
        String ptpCom = ((JComboBox)components[14]).getSelectedItem()+"";
        JLabel individualSum = ((JLabel)components[20]);
        
        try {
             Double lamdaDou = Double.parseDouble(lamda); 
             Double ptpDou = Double.parseDouble(ptp); 
             Double saftyFactorDou = Double.parseDouble(saftyFactor)/100; 
             
             pfdAvg =equations.PFD_AVG(lamdaDou, saftyFactorDou ,sacaleConverters.ptpPeriodConversion(ptpCom,ptpDou),voting);
             
             JOptionPane.showMessageDialog(InternalFrameDemo.mainFrame,"lamda-"+lamda+" saftyFactor-"+saftyFactor+" ccf-"+ccf+" dc-"+dc+" voting-"+voting+" mttr-"+
                      mttr+" ptp-"+ptp+" mttrCom-"+mttrCom+" ptpCom-"+ptpCom);
          //   System.out.println("************"+sensorlamdaDou.floatValue());
               System.out.println("88888888888"+ptpCom+" "+mttrCom);
             individualSum.setText(sf.format(pfdAvg));
             
        } catch (NumberFormatException e) {
             JOptionPane.showMessageDialog(InternalFrameDemo.mainFrame,"Please check you inputs in "+componentName);
        }
        
       
        int index = 0;
        for (Component comp : components) {
                // Cast comp to JComboBox / JTextField to get the values
                //System.out.println(index++ +")"+comp);
                
                if (comp instanceof JTextField) {
                    JTextField textField = (JTextField) comp;
                    System.out.println(textField.getText());
                }
            }
    
    
       return pfdAvg;
    }
    
    public void setSilData(){
        
   
     Sil sil = silDao.findById(silId);
     sil.setArchitecture(((JComboBox)(getComponentsInForm(sensorFrom)[10])).getSelectedItem()+"");
     sil.setSensors(getComponentsName(sensorList));
     sil.setSensorsScore(((JLabel)(getComponentsInForm(sensorFrom)[20])).getText());
     sil.setController(getComponentsName(LSCList));
     sil.setControllerScore(((JLabel)(getComponentsInForm(LSCFrom)[20])).getText());
     sil.setFinalElement(getComponentsName(FECList));
     sil.setFinalElementScore(((JLabel)(getComponentsInForm(FECFrom)[20])).getText());
     sil.setTotalScore(jLabel24.getText());
     
     silDao.Upadte(sil);
    
    }
    
    public Component[] getComponentsInForm(JPanel from){
    
      return ((JPanel)from.getComponent(0)).getComponents();
    }
    
    public String getComponentsName(JList<Components> com){
    
        String res="";
        
        for (int i = 0; i < com.getModel().getSize(); i++) {
            
            res=res+((Components)com.getModel().getElementAt(i)).getComDescription()+"#";
        }
          
    
        return res;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTotal;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JPanel jPanel5;
    // End of variables declaration//GEN-END:variables
}
